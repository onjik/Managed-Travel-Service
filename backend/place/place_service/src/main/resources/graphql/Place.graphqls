input NearByPlacesInput {
    latitude: Float!
    longitude: Float!
    radiusMeters: NonNegativeInt!
    maxResultCount: NonNegativeInt
    placeTypes: [PlaceType!]
    distanceSort: Boolean
}

type Query {
    place(id: ID!): Place
    nearbyPlaces(input: NearByPlacesInput!): [Place!]
    photoUri(placeId: ID!, photoId: ID!, maxWidthPx: NonNegativeInt, maxHeightPx: NonNegativeInt): String
}

type Place {
    id: ID!
    name: String!
    tags: [String!]
    address: String!
    latitude: Float!
    longitude: Float!
    summary: String!
    photos: [Photo!]
}

type Photo {
    photoId: ID!
    placeId: ID!
    widthPx: NonNegativeInt
    heightPx: NonNegativeInt
    authorAttributions: [AuthorAttribution!]
}

type AuthorAttribution {
    displayName: String!
    uri: String
    photoUri: String
}

enum PlaceType {
    TOURIST_ATTRACTION
    RESTAURANT
    ACCOMMODATION
    SHOPPING
    TRANSPORTATION
}